services:
  commondb:
    image: mcr.microsoft.com/mssql/server
    container_name: commondb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=admin@123
    restart: always
    ports:
      - "1433:1433"
    

    networks:
      - microservices_network
  zookeeper: 
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservices_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:     
     - "9092:9092"  # Expose port 9092 for host
     - "9093:9093"  # Expose port 9093 internally within the Docker network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:909
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT     
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092  # Kafka listening on all interfaces inside the container
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093, OUTSIDE://localhost:9092  # Kafka advertised listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME_INSIDE_LISTENER: INSIDE
      KAFKA_LISTENER_NAME_OUTSIDE_LISTENER: OUTSIDE
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_PORT: 9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - microservices_network


  distributedcache:
    image: redis:latest
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - microservices_network

  messagebroker:
    image: rabbitmq:management
    container_name: messagebroker
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices_network
  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__SqlServerDb=Server=commondb;Database=CatalogDb;User Id=sa;Password=admin@123;TrustServerCertificate=True
      - MessageBroker__Host=amqp://messagebroker:5672
      - MessageBroker__Username=guest
      - MessageBroker__Password=guest
      - Kafka__BootstrapServers=kafka:9093
    depends_on:
      - commondb
    ports:
      - "6000:8080"
      - "6060:8081"

    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - microservices_network

  basket.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__SqlServerDb=Server=commondb;Database=BasketDb;User Id=sa;Password=admin@123;TrustServerCertificate=True
      - ConnectionStrings__Redis=distributedcache:6379
      - GrpcSetting__DiscountUrl=https://discount.grpc:8081
      - MessageBroker__Host=amqp://messagebroker:5672
      - MessageBroker__Username=guest
      - MessageBroker__Password=guest
      - Kafka__BootstrapServers=kafka:9093

    depends_on:
      - commondb
      - distributedcache
      - discount.grpc
      - messagebroker

    ports:
      - "6001:8080"
      - "6061:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - microservices_network
      
  discount.grpc:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__SqlLite=Data Source=discountdb

    ports:
      - "6002:8080"
      - "6062:8081"
    volumes:
      - ./data/discount:/app/data
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - microservices_network
  ordering.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__SqlServerDb=Server=commondb;Database=OrderDb;User Id=sa;Password=admin@123;TrustServerCertificate=True
      - MessageBroker__Host=amqp://messagebroker:5672
      - MessageBroker__Username=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFullFillment=false
      - Kafka__BootstrapServers=kafka:9093
    depends_on:
      - commondb
      - messagebroker
    ports:
      - "6003:8080"
      - "6063:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - microservices_network

  ocelotapigateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
    ports:
      - "6004:8080"
      - "6064:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - microservices_network    
  # yarpapigateway:
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - ASPNETCORE_HTTP_PORTS=8080
  #     - ASPNETCORE_HTTPS_PORTS=8081
  #   depends_on:
  #     - catalog.api
  #     - basket.api
  #     - ordering.api
  #   ports:
  #     - "6004:8080"
  #     - "6064:8081"
  #   volumes:
  #     - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
  #     - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  #     - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
  #     - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  #   networks:
  #     - microservices_network
  security:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - MessageBroker__Host=amqp://messagebroker:5672
      - MessageBroker__Username=guest
      - MessageBroker__Password=guest
      - Kafka__BootstrapServers=kafka:9093
    ports:
      - "6006:8080"
      - "6066:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

    networks:
      - microservices_network
  logging.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__SqlServerDb=Server=commondb;Database=LoggingDb;User Id=sa;Password=admin@123;TrustServerCertificate=True
      - MessageBroker__Host=amqp://messagebroker:5672
      - MessageBroker__Username=guest
      - MessageBroker__Password=guest
      - Kafka__BootstrapServers=kafka:9093
    ports:
      - "6007:8080"
      - "6067:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - microservices_network
  shopping.web:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ApiSetting__GatewayAddress=http://yarpapigateway:8080

   
    
    ports:
      - "6005:8080"
      - "6065:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - microservices_network
  container:
    environment:
      NODE_ENV: development
    volumes:
      - ./Microfrontend/container:/app
      - /app/node_modules
    command: npm start
    networks:
      - microservices_network
  marketing:
    environment:
      NODE_ENV: development
    volumes:
      - ./Microfrontend/marketing:/app
      - /app/node_modules
    command: npm start
    networks:
      - microservices_network
  auth:
    environment:
      NODE_ENV: development
    volumes:
      - ./Microfrontend/auth:/app
      - /app/node_modules
    command: npm start
    networks:
      - microservices_network

  dashboard:
    environment:
      NODE_ENV: development
    volumes:
      - ./Microfrontend/dashboard:/app
      - /app/node_modules
    command: npm start
    networks:
      - microservices_network
  product:
    environment:
      NODE_ENV: development
    volumes:
      - ./Microfrontend/product:/app
      - /app/node_modules
    command: npm start
    networks:
      - microservices_network
  basket:
    environment:
      NODE_ENV: development
    volumes:
      - ./Microfrontend/basket:/app
      - /app/node_modules
    command: npm start
    networks:
      - microservices_network

  order:
    environment:
      NODE_ENV: development
    volumes:
      - ./Microfrontend/order:/app
      - /app/node_modules
    command: npm start
    networks:
      - microservices_network
volumes:
  sqlserver_commondb:
  sqlserver_order:
  sqlserver_catalog:
  sqlserver_basket:

networks:
  microservices_network:
    driver: bridge
