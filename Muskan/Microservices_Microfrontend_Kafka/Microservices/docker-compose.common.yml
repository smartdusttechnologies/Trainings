version: "3.8"

services:
  commondb:
    image: mcr.microsoft.com/mssql/server
    container_name: commondb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=admin@123
    restart: always
    ports:
      - "1433:1433"
    networks:
      - microservices_network

  distributedcache:
    image: redis:latest
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - microservices_network

  messagebroker:
    image: rabbitmq:management
    container_name: messagebroker
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices_network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservices_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092" # Expose port 9092 for host
      - "9093:9093" # Expose port 9093 internally within the Docker network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092 # Kafka listening on all interfaces inside the container
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093, OUTSIDE://localhost:9092 # Kafka advertised listeners
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME_INSIDE_LISTENER: INSIDE
      KAFKA_LISTENER_NAME_OUTSIDE_LISTENER: OUTSIDE
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_PORT: 9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - microservices_network
networks:
  microservices_network:
    driver: bridge
    name: microservices_network
