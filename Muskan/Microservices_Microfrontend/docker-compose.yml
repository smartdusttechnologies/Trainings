services:
  commondb:
    image: mcr.microsoft.com/mssql/server
  # catalogdb:
  #   image: mcr.microsoft.com/mssql/server
  # basketdb:
  #   image: mcr.microsoft.com/mssql/server
  # orderdb:
  #   image: mcr.microsoft.com/mssql/server
  distributedcache:
    image: redis

  messagebroker:
    image: rabbitmq:management
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: Microservices\Product\src
      dockerfile: Services\Catalog\Catalog.API\Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: Microservices/Basket/src
      dockerfile: Services/Basket/Basket.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: Microservices/Basket/src
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: Microservices/Order/src
      dockerfile: Services/Order/Order.API/Dockerfile

  yarpapigateway:
    image: ${DOCKER_REGISTRY-}yarpapigateway
    build:
      context: Microservices/APiGateway/src
      dockerfile: APiGateway/YarpAPIGateway/Dockerfile

  # volumes:
  # sqlserver_commondb:
  # sqlserver_order:
  # sqlserver_catalog:
  # sqlserver_basket:

  security:
    image: ${DOCKER_REGISTRY-}security
    build:
      context: ./Microservices/Common
      dockerfile: src/Security/Security/Dockerfile

  logging.api:
    image: ${DOCKER_REGISTRY-}loggingapi
    build:
      context: ./Microservices/Common
      dockerfile: src/Logging/Logging.API/Dockerfile

  shopping.web:
    image: ${DOCKER_REGISTRY-}shoppingweb
    build:
      context: ./Microservices/ShoppingWeb/src
      dockerfile: WebApps/Shopping.Web/Dockerfile
